name: Build and Deploy
on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
permissions:
  contents: write
jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-deploy:
    strategy:
      matrix:
        platform:
          - ubuntu-22.04
          - ubuntu-20.04
          - ubuntu-18.04

          #- macos-latest
    needs: create-release
    runs-on: ${{ matrix.platform }}
      
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - uses: mishas/setup-bazelisk-action@v1
      - name: Mount bazel cache
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: bazel
      - name: install_potential_build_deps
        run: |
            sudo apt-get install -qq autotools-dev autoconf-archive pkg-config libz-dev unzip
      - name: build libgs on ${{ matrix.platform }}
        shell: bash
        run: |
            mkdir -p ghostscript_${{ matrix.platform }}
            wget -O ghostscript_${{ matrix.platform }}/ghostscript_${{ matrix.platform }}.tar.gz https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs926/ghostpdl-9.26.tar.gz
            cd ghostscript_${{ matrix.platform }}
            tar -xf ghostscript_${{ matrix.platform }}.tar.gz
            cd ghostpdl-9.26
            autoreconf -fi
            ./configure
            make so
            cd sobin
            cp libgs.so.9.26 ../../../libgs.so.9.26
            cd ../../..
            zip rules_latex_deps_${{ matrix.platform }}.zip libgs.so.9.26

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: rules_latex_deps_${{ matrix.platform }}.zip
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./rules_latex_deps_${{ matrix.platform }}.zip
          asset_name: rules_latex_deps_${{ matrix.platform }}.zip
          asset_content_type: application/zip
